<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Daily Reflections</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"
      crossorigin="anonymous"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Geologica:wght@200;800&display=swap"
      rel="stylesheet"
    />

    <style>
      .vl1 {
        position: absolute;
        top: 120px;
        left: 48%;
        border-left: 6px solid rgb(255, 255, 255);
        height: 500px;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: "Geologica", sans-serif;
        padding: 1em;
      }
      p.para {
        font-size: 1.5rem;
        text-align: justify;
        padding-top: 15vh;
        padding-right: 45px;
        line-height: 40px;
        padding-left: 35px;
      }
      .intro-text {
        padding-top: 25vh;
        text-align: center;
        font-size: 6rem;
        width: 0ch;
        overflow: hidden;
        margin: 0 auto;
        white-space: nowrap;
        /* color: black; */
        background-image: linear-gradient(155deg, #1abc9c, #1abc9c, #1abc9c);
        background-clip: text;
        -webkit-background-clip: text;
        color: transparent;
      }
      .intro-text.active {
        animation: typeIn 2s steps(28) forwards;
      }
      @keyframes typeIn {
        to {
          width: 25ch;
        }
      }

      .box {
        width: 100%;
        height: 90vh;
        background-color: #1abc9c;
        text-align: center;
        /* line-height: 200px; */
        /* margin: 50em 0; */
        /* margin-left: calc(50% - 100px); */
        transition: transform 0.5s, opacity 0.5s;
        color: #fff;
        font-weight: bold;
      }
      .box.left {
        transform: translateX(-200px);
        opacity: 0;
      }
      .box.right {
        transform: translateX(200px);
        opacity: 0;
        /* background-color: #473bf0; */
      }
      .box.top {
        transform: translateY(-200px) rotate(360deg);
        opacity: 0;
        background-color: #3d2645;
      }
      .box.bottom {
        transform: translateY(200px) scaleX(3);
        opacity: 0;
        background: #ede580;
      }
      .box.active {
        transform: translateX(0);
        opacity: 1;
      }

      .first {
        height: 100vh;
        background-color: #ffffff;
      }

      .secHeading {
        padding-top: 7vh;
        background-image: linear-gradient(155deg, #000000, #000000, #000000);
        font-size: 5.5rem;
      }

      .heading {
        padding-right: 30px;
        font-size: 4rem;
        padding-top: 30vh;
      }

      body {
        font-family: "Geologica", sans-serif;
      }
      .grid-container {
        grid-template-columns: 1fr 1fr;
        display: grid;
        height: fit-content;
      }

      .grid-item {
        height: 100vh;
      }

      .first {
        font-family: "Geologica", sans-serif;
        font-weight: 800;
        line-height: 40px;
        color: #1abc9c;
        text-align: center;
        background: #ffffff;
        border: none;
      }
      h1 {
        font-weight: 800;
        font-size: 60px;
      }

      h1.heading1 {
        padding-top: 36vh;
      }

      .second {
        text-align: center;
        background-color: #ffffff;
      }

      .basic {
        padding-top: 10vh;
      }

      .vl {
        border-left: 6px solid #1abc9c;
        height: 500px;
        position: absolute;
        left: 50%;
        margin-left: -3px;
        top: 20vh;
      }

      button.login {
        background-color: #1abc9c;
        font-family: "Geologica", sans-serif;
        font-weight: 300;
        font-size: 20px;
        gap: none;
        padding: 20px 198.3px;
        border: none;
        border-radius: none;
      }

      input {
        width: 444.7px;
        height: 50px;
        font-size: 20px;
        text-align: center;
      }

      ::placeholder {
        font-size: 15px;
      }
      .google {
        background-color: #dd4b39;
        color: white;
      }
      .btn {
        width: 430px;
        padding: 12px;
        border: none;
        border-radius: 4px;
        margin: 5px 0;
        opacity: 0.85;
        display: inline-block;
        font-size: 17px;
        line-height: 20px;
        text-decoration: none; /* remove underline from anchors */
      }

      .google:hover{
        color:#dd4b39 ;
      }
    </style>
  </head>
  <body>
    <div class="first">
      <h1 class="intro-text">
        Welcome to
        <h1 class="intro-text secHeading">My Daily Reflections !</h1>
      </h1>
    </div>

    <div class="scroll-reveal box left">
      <div class="container text-center">
        <div class="row">
          <div class="col">
            <h1 class="heading">
              A Sanctuary for<br />Self-Expression<br />and Reflection
            </h1>
            <div class="vl1"></div>
          </div>
          <div class="col">
            <p class="para">
              At our website, we believe in the transformative power of daily
              journaling. This digital space serves as a sanctuary where you can
              freely express your thoughts, emotions, and experiences, allowing
              for deep introspection and personal growth. Our mission is to
              empower you to embrace your inner voice and discover the richness
              that comes from self-reflection. Whether you're looking to
              document your daily musings, explore your dreams and aspirations,
              or seek solace during challenging times, this platform is your
              canvas.
            </p>
          </div>
        </div>
      </div>
    </div>
    <div class="scroll-reveal box right">
      <div class="vl"></div>
      <div class="grid-container">
        <div class="grid-item first">
          <h1 class="heading1">My Daily</h1>
          <h1 class="heading2">Reflections</h1>
        </div>
        <div class="grid-item second">
          <div class="basic">
            <h1 style="color: #000000;">Login</h1>
            <br />
            <form action="/login" method="POST">
              <input
                type="text"
                placeholder="Enter your username"
                name="username"
              /><br /><br />
              <input
                type="password"
                placeholder="Enter password"
                name="password"
              /><br /><br />
              <button class="login" type="submit">Login</button>
            </form><br>
            <h3 style="color: #000000;">Or</h3>
            <a href="/auth/google" role="button" class="google btn">
              <i class="fa fa-google fa-fw"></i> Login with Google+
            </a><br><br>
            <h4 style="color: #000000;">New to this website ? <a href="/signUp">Sign Up Here</a></h4>
          </div>
        </div>
      </div>
    </div>

    <script>
      function scrollTrigger(selector, options = {}) {
        let els = document.querySelectorAll(selector);
        els = Array.from(els);
        els.forEach((el) => {
          addObserver(el, options);
        });
      }

      function addObserver(el, options) {
        if (!("IntersectionObserver" in window)) {
          if (options.cb) {
            options.cb(el);
          } else {
            entry.target.classList.add("active");
          }
          return;
        }
        let observer = new IntersectionObserver((entries, observer) => {
          //this takes a callback function which receives two arguments: the elemts list and the observer instance
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              if (options.cb) {
                options.cb(el);
              } else {
                entry.target.classList.add("active");
              }
              observer.unobserve(entry.target);
            }
          });
        }, options);
        observer.observe(el);
      }
      // Example usages:
      scrollTrigger(".intro-text");

      scrollTrigger(".scroll-reveal", {
        rootMargin: "-200px",
      });

      scrollTrigger(".loader", {
        rootMargin: "-200px",
        cb: function (el) {
          el.innerText = "Loading...";
          setTimeout(() => {
            el.innerText = "Task Complete!";
          }, 1000);
        },
      });
    </script>
  </body>
</html>
